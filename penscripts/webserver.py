from http.server import HTTPServer, SimpleHTTPRequestHandler
import os
import click
import netifaces as ni


@click.group()
def cmd():
    pass


@cmd.command()
@click.option("-p", "--port", help="Port to serve on", default=80, show_default=True)
def start_serving(port):
    _print_urls()
    serve(port=port)


def serve(port=80):
    httpd = HTTPServer(("localhost", port), SimpleHTTPRequestHandler)
    httpd.serve_forever()


@cmd.command()
@click.option(
    "--path",
    help="Path to list items in",
    default=".",
    show_default=True,
    type=click.Path(),
)
def ls(path):
    items = dir_listing(path, 0)
    print(items)


def dir_listing(path, depth=0, max_depth=2, skipHiddenDirs=True):
    res = []
    if depth > max_depth:
        return res

    dir_content = os.listdir(path)
    for content in dir_content:
        current = f"{path}/{content}"
        if os.path.isfile(current):
            res.append(content)
        elif os.path.isdir(current):
            if skipHiddenDirs and content.startswith("."):
                continue
            sub_result = dir_listing(
                f"{path}/{content}", depth=depth + 1, max_depth=max_depth
            )
            for r in sub_result:
                res.append(f"{content}/{r}")

    return res


def get_host_address():
    address = "0.0.0.0"
    interfaces = ni.interfaces()
    if "tun0" in interfaces:
        tun0_ip = ni.ifaddresses("tun0")[ni.AF_INET][0]["addr"]
        address = tun0_ip

    return address


@cmd.command()
def print_urls():
    _print_urls()


def _print_urls():
    files_to_serve = dir_listing(".")
    host_address = get_host_address()
    for file in files_to_serve:
        print(f"\thttp://{host_address}/{file}")


if __name__ == "__main__":
    cmd()
